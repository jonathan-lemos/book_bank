POST /api/accounts/login
	input: { username: string, password: string }
	output: { status: number, response: string, token: string | null }
		"Set-Cookie" -- token cookie { iat: number, exp: number, sub: string, roles: string[] }

POST /api/accounts/create
	requires: admin
	input: { username: string, password: string, roles?: { [key]: string } }
	output: { status: number, response: string }

GET /api/accounts/roles
	requires: admin
	output: string[]

GET /api/accounts/roles/:role
	requires: admin
	output: string[]

GET /api/accounts/users/roles/:username
	requires: admin or current user
	output: { roles: string[] }

PUT /api/accounts/users/roles/:username
	requires: admin
	input: { roles: string[] }
	output: { status: number, response: string }

PATCH /api/accounts/users/roles/:username
	requires: admin
	input: { remove?: string[], add?: string[] }
	output: { status: number, response: string }

PUT /api/accounts/users/password/:username
    requires: admin or current user
    input: { password: string }
    output: { status: number, response: string }

DELETE /api/accounts/users/:username
	requires: admin
	input: none
	output: { status: number, response: string }

GET /api/books/cover/:id
    output: image

GET /api/books/metadata/:id
	output: { id: string, title: string, size: number, metadata: [string, string][] }

GET /api/books/thumbnail/:id
    output: image

GET /api/books/download/:id
    output: file

POST /api/books
	requires: librarian
	input: multipart-formdata:
		title: string
		body: [[ binary pdf content ]]
		output: { status: number, response: string, id: string | null }

PUT /api/books/metadata/:id
	requires: librarian
	input: { title: string, metadata: { key: string, value: string }[] }
	output: { status: number, response: string }

PATCH /api/books/metadata/:id
	requires: librarian
	input: { title: string | null, metadata: { key: string, value: string | null }[] }
	output: { status: number, response: string }

DELETE /api/books/:id
	requires: librarian
	output: { status: number, response: string }

GET /api/search/:query?count=num&page=num
	output: { id: string, title: string, metadata: [string, string][] }[]

GET /api/search_count/:query
	output: number

GET /api/suggestions/:query/:count
	output: { id: string, text: string, tag: string }[]
